%This set of commands takes data generated by CEE2generate.m and performs
%OLS reduced form VAR estimation along with bootstrapping of confidence
%bands.  The end result is an initial estimate of the desired IRF (called
%IRF), an average of the bootstrapped IRFs (IRFavg) and the bootstrapped
%confidence bands (IRFupp and IRFlow).  The full set of IRFs are in
%3-dimensional matrices with the same names and charcaters 'mat' appended.

% GET y & x MATRICES
CEE2getyx
%ESTIMATE REDUCED FORM VAR
[beta,Sig,u] = CEE2estim(y,x,Origdf);
%SOLVE FOR IRFS
IRFmat = CEE2irfsolve(beta,Sig);
%SAVE RESULTS
data1 = data;
beta1 = beta;
Sig1 = Sig;
IRFmat1 = IRFmat;
% find regression constants
cons = beta1(P*Q+1,:);

%BOOTSTRAP CONFIDENCE BANDS
% save first P values in order to construct bootstrap data
datastart = data(1:P,:);
% initialize the bootstrap holding matrix, coeffeicients in columns,
% bootstrap iterations in rows
boot1 = zeros(N,Q*Q*(K+1));
for n=1:N
    %CONSTRUCT BOOTSTRAP DATA
    draw = unidrnd(S,S,1);  %choose random draws with replacement for errors
    uhat = u(draw,:);  %create uhat series
    %construct artificial data series
    data = zeros(T,Q); %initialize the series with zeros for all observations
    if Startmethod == 2
        draw2 = unidrnd(T,P,1);  %choose random draws with replacement for initial values
        datastart = data1(draw2,:);  % create initial values
    end
    data(1:P,:) = datastart(1:P,:); %read starting y's into first P observations
    % construct last T obervations using estimated model
    for t=P+1:T
        data(t,:) = uhat(t-P,:) + cons; %add in randomly drawn error term & constant
        for p=1:P
            data(t,:) = data(t,:) + data(t-p,:)*beta1(Q*(p-1)+1:Q*p,:); %add in coefficients times lags of data
        end
    end
    %GET y & x MATRICES
    CEE2getyx
    %ESTIMATE REDUCED FORM VAR
    [beta,Sig] = CEE2estim(y,x,Bootdf);
    %SOLVE FOR IRFS
    IRFmat = CEE2irfsolve(beta,Sig);
    % read these into holding matrix
    boot(n,:) = reshape(IRFmat,1,Q*Q*(K+1));  
end

% ANALYZE THE BOOTSTRAP RESULTS
bootavg = mean(boot);  %get average value of bootstrap A's
bootvar = var(boot); %get variances of bootstrap A's
% get avg IRFs from boot1avg
IRFavgmat = reshape(bootavg,Q,Q,K+1);
% DO PERCENTILES
% sort each column
bootsort = sort(boot);
% get upper bounds
IRFuppmat = reshape(bootsort(upper,:),Q,Q,K+1);
% get lower bounds
IRFlowmat = reshape(bootsort(lower,:),Q,Q,K+1);

%GET SPECIFIC IRFs
IRF = reshape(IRFmat1(variable,shock,:),K+1,1);
IRFavg = reshape(IRFavgmat(variable,shock,:),K+1,1);
IRFupp = reshape(IRFuppmat(variable,shock,:),K+1,1);
IRFlow = reshape(IRFlowmat(variable,shock,:),K+1,1);